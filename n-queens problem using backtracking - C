#include<stdio.h>
#include<stdlib.h>

int x[10], count = 1;

void nqueens(int k, int n) {
    for (int i = 1; i <= n; i++) {
        int valid = 1;
        for (int j = 1; j < k; j++) {
            if (x[j] == i || abs(x[j] - i) == abs(j - k)) {
                valid = 0;
                break;
            }
        }
        if (valid) {
            x[k] = i;
            if (k == n) {
                printf("Solution-%d: ", count++);
                for (int j = 1; j <= n; j++)
                    printf("Queen%d-[%d,%d] ", j, j, x[j]);
                printf("\n");
            } else {
                nqueens(k + 1, n);
            }
        }
    }
}

int main() {
    int n;
    printf("Enter number of queens: ");
    scanf("%d", &n);
    nqueens(1, n);
    return 0;
}











OUTPUT:
***********************************************
Enter number of queens: 4
Solution-1: Queen1-[1,2] Queen2-[2,4] Queen3-[3,1] Queen4-[4,3] 
Solution-2: Queen1-[1,3] Queen2-[2,1] Queen3-[3,4] Queen4-[4,2]
***********************************************














#include <stdio.h>
#include <stdlib.h>

int x[10], count = 1;

void nqueens(int k, int n) {
    if (k > n) {
        printf("Solution-%d: ", count++);
        for (int j = 1; j <= n; j++)
            printf("Queen%d-[%d,%d] ", j, j, x[j]);
        printf("\n");
        return;
    }

    for (int i = 1; i <= n; i++) {
        int valid = 1;
        for (int j = 1; j < k; j++) {
            if (x[j] == i || abs(x[j] - i) == abs(j - k)) {
                valid = 0;
                break;
            }
        }
        if (valid) {
            x[k] = i;
            nqueens(k + 1, n);
        }
    }
}

int main() {
    int n;
    printf("Enter number of queens: ");
    scanf("%d", &n);
    nqueens(1, n);
    return 0;
}
